apiVersion: apps/v1
kind: Deployment
metadata:
  name: events-private-deployment
  namespace: events-organiser
  labels:
    app: events-private
spec:
  replicas: 1
  selector:
    matchLabels:
      app: events-private
  template:
    metadata:
      labels:
        app: events-private
    spec:
      containers:
        - name: events-private
          image: madiskoivopuu/events-private
          ports:
            - containerPort: 80
          env:
            - name: MYSQL_EVENTS_USER
              value: "events"
            - name: MYSQL_EVENTS_DB
              value: "events"
            - name: MYSQL_EVENTS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: events.MYSQL_EVENTS_PASSWORD
            - name: MYSQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: events.MYSQL_HOST

            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: events.RABBITMQ_HOST
            - name: RABBITMQ_VIRTUALHOST
              value: "/events-parser"
            - name: RABBITMQ_USERNAME
              value: "events-parser"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: events.RABBITMQ_PASSWORD
            - name: RABBITMQ_EMAILS_QUEUE
              value: "email_parsing_queue"
            - name: RABBITMQ_EVENTS_OUTPUT_QUEUE
              value: "parsed_events_queue"
            #- name: MYSQL_DB_PASSWORD
            #  valueFrom:
            #    secretKeyRef:
            #      name: secrets
            #      key: microsoft.MYSQL_MICROSOFT_PASSWORD
            #- name: MYSQL_HOST
            #  valueFrom:
            #    configMapKeyRef:
            #      name: config
            #      key: microsoft.MYSQL_HOST

      #initContainers:
      #- name: install
      #  image: busybox
      #  command:
      #  - wget
      #  - "-O"
      #  - "/llm/llama.gguf"
      #  - http://kubernetes.io
      #  volumeMounts:
      #  - name: llm-dir
      #    mountPath: "/llm"
      #volumes:
      #- name: llm-dir
      #  emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: events-private-svc
  namespace: events-organiser
spec:
  type: ClusterIP
  selector:
    app: events-private
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80