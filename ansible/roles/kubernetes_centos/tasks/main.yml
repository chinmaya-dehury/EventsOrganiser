- name: Download Kubernetes install prerequisites
  ansible.builtin.apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - apt-transport-https 
    - ca-certificates 
    - curl 
    - gnupg

- name: Download kubernetes repo signing key
  ansible.builtin.shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key 
    | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg 
    | chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes repo to apt
  ansible.builtin.copy:
    content: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /"
    dest: /etc/apt/sources.list.d/kubernetes.list
    owner: root
    group: root
    mode: "0644"

- name: Install kubernetes and containerd
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  with_items:
    - "kubectl"
    - "kubeadm"
    - "kubelet"
    - "containerd"

- name: Open kubernetes default ports
  community.general.ufw:
    state: enabled
    rule: allow
    port: "{{ item }}"
    proto: tcp
  with_items:
    - "5473"
    - "6443"
    - "2379:2380"
    - "10250"
    - "10251"
    - "10252"
    - "10255"

# This enables IP forwarding and allows iptables to see bridged traffic
- name: Create '99-k8s.conf' in /etc/sysctl.d/
  ansible.builtin.copy:
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
    dest: /etc/sysctl.d/99-k8s.conf

- name: Copy containerd config
  ansible.builtin.copy:
    src: containerd_config.toml
    dest: /etc/containerd/config.toml

- name: Reload settings from system configuration files
  ansible.builtin.shell: "sysctl --system"

# https://www.reddit.com/r/linuxadmin/comments/flzx5r/ansible_how_to_disable_swap/
- name: Disable swap for current session
  command: swapoff -a
  become: true

- name: Disable swap from /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'
    backup: yes

- name: Enable kubelet
  ansible.builtin.systemd:
    name: kubelet
    state: started
    enabled: true

- name: Enable containerd
  ansible.builtin.systemd:
    name: containerd
    state: started
    enabled: true